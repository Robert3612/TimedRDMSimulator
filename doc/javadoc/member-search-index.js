memberSearchIndex = [{"p":"org.lrdm","c":"Link.State","l":"ACTIVE"},{"p":"org.lrdm","c":"Mirror","l":"addLink(Link)","u":"addLink(org.lrdm.Link)"},{"p":"org.lrdm.topologies","c":"BalancedTreeTopologyStrategy","l":"BalancedTreeTopologyStrategy()","u":"%3Cinit%3E()"},{"p":"org.lrdm","c":"Link.State","l":"CLOSED"},{"p":"org.lrdm","c":"Link","l":"crash(int)"},{"p":"org.lrdm","c":"Mirror","l":"crash(int)"},{"p":"org.lrdm","c":"DataPackage","l":"DataPackage(int)","u":"%3Cinit%3E(int)"},{"p":"org.lrdm","c":"Mirror.State","l":"DOWN"},{"p":"org.lrdm.effectors","c":"Effect","l":"Effect(Action)","u":"%3Cinit%3E(org.lrdm.effectors.Action)"},{"p":"org.lrdm.effectors","c":"Effector","l":"Effector(Network)","u":"%3Cinit%3E(org.lrdm.Network)"},{"p":"org.lrdm","c":"Link","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.lrdm.examples","c":"ExampleOptimizer","l":"ExampleOptimizer()","u":"%3Cinit%3E()"},{"p":"org.lrdm.examples","c":"ExampleSimulation","l":"ExampleSimulation()","u":"%3Cinit%3E()"},{"p":"org.lrdm.topologies","c":"FullyConnectedTopology","l":"FullyConnectedTopology()","u":"%3Cinit%3E()"},{"p":"org.lrdm","c":"Link","l":"getActivationTime()"},{"p":"org.lrdm.probes","c":"LinkProbe","l":"getActiveLinkMetric(int)"},{"p":"org.lrdm","c":"Network","l":"getActiveLinksHistory()"},{"p":"org.lrdm","c":"Link","l":"getAverageBandwidth()"},{"p":"org.lrdm","c":"Network","l":"getBandwidthHistory()"},{"p":"org.lrdm","c":"Network","l":"getBandwidthUsed(int)"},{"p":"org.lrdm","c":"Link","l":"getCurrentBandwidth()"},{"p":"org.lrdm","c":"Network","l":"getCurrentTimeStep()"},{"p":"org.lrdm","c":"Mirror","l":"getData()"},{"p":"org.lrdm.effectors","c":"Effect","l":"getDeltaActiveLinks()"},{"p":"org.lrdm.effectors","c":"Effect","l":"getDeltaBandwidth(Properties)","u":"getDeltaBandwidth(java.util.Properties)"},{"p":"org.lrdm.effectors","c":"Effect","l":"getDeltaTimeToWrite()"},{"p":"org.lrdm.effectors","c":"Action","l":"getEffect()"},{"p":"org.lrdm","c":"TimedRDMSim","l":"getEffector()"},{"p":"org.lrdm","c":"DataPackage","l":"getFileSize()"},{"p":"org.lrdm.effectors","c":"Action","l":"getId()"},{"p":"org.lrdm","c":"Link","l":"getID()"},{"p":"org.lrdm","c":"Mirror","l":"getID()"},{"p":"org.lrdm.util","c":"IDGenerator","l":"getInstance()"},{"p":"org.lrdm.effectors","c":"Effect","l":"getLatency()"},{"p":"org.lrdm","c":"TimedRDMSim","l":"getLinkProbe()"},{"p":"org.lrdm.probes","c":"LinkProbe","l":"getLinkRatio()"},{"p":"org.lrdm","c":"Mirror","l":"getLinks()"},{"p":"org.lrdm","c":"Network","l":"getLinks()"},{"p":"org.lrdm.probes","c":"LinkProbe","l":"getLinks()"},{"p":"org.lrdm","c":"TimedRDMSim","l":"getMirrorProbe()"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"getMirrorRatio()"},{"p":"org.lrdm","c":"Network","l":"getMirrors()"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"getMirrors()"},{"p":"org.lrdm","c":"Network","l":"getMirrorsSortedById()"},{"p":"org.lrdm.effectors","c":"Action","l":"getNetwork()"},{"p":"org.lrdm.effectors","c":"TargetLinkChange","l":"getNewLinksPerMirror()"},{"p":"org.lrdm.effectors","c":"MirrorChange","l":"getNewMirrors()"},{"p":"org.lrdm.effectors","c":"TopologyChange","l":"getNewTopology()"},{"p":"org.lrdm.util","c":"IDGenerator","l":"getNextID()"},{"p":"org.lrdm","c":"Network","l":"getNumActiveLinks()"},{"p":"org.lrdm","c":"Network","l":"getNumLinks()"},{"p":"org.lrdm","c":"Network","l":"getNumMirrors()"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"getNumMirrors()"},{"p":"org.lrdm","c":"Mirror","l":"getNumNonClosedLinks()"},{"p":"org.lrdm","c":"Network","l":"getNumReadyMirrors()"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"getNumReadyMirrors()"},{"p":"org.lrdm","c":"Network","l":"getNumTargetLinks()"},{"p":"org.lrdm.topologies","c":"BalancedTreeTopologyStrategy","l":"getNumTargetLinks(Network)","u":"getNumTargetLinks(org.lrdm.Network)"},{"p":"org.lrdm.topologies","c":"FullyConnectedTopology","l":"getNumTargetLinks(Network)","u":"getNumTargetLinks(org.lrdm.Network)"},{"p":"org.lrdm.topologies","c":"NConnectedTopology","l":"getNumTargetLinks(Network)","u":"getNumTargetLinks(org.lrdm.Network)"},{"p":"org.lrdm.topologies","c":"TopologyStrategy","l":"getNumTargetLinks(Network)","u":"getNumTargetLinks(org.lrdm.Network)"},{"p":"org.lrdm","c":"Network","l":"getNumTargetLinksPerMirror()"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"getNumTargetLinksPerMirror()"},{"p":"org.lrdm","c":"Network","l":"getNumTargetMirrors()"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"getNumTargetMirrors()"},{"p":"org.lrdm","c":"Mirror","l":"getOutLinks()"},{"p":"org.lrdm","c":"Network","l":"getPredictedBandwidth(int)"},{"p":"org.lrdm.topologies","c":"BalancedTreeTopologyStrategy","l":"getPredictedNumTargetLinks(Action)","u":"getPredictedNumTargetLinks(org.lrdm.effectors.Action)"},{"p":"org.lrdm.topologies","c":"FullyConnectedTopology","l":"getPredictedNumTargetLinks(Action)","u":"getPredictedNumTargetLinks(org.lrdm.effectors.Action)"},{"p":"org.lrdm.topologies","c":"NConnectedTopology","l":"getPredictedNumTargetLinks(Action)","u":"getPredictedNumTargetLinks(org.lrdm.effectors.Action)"},{"p":"org.lrdm.topologies","c":"TopologyStrategy","l":"getPredictedNumTargetLinks(Action)","u":"getPredictedNumTargetLinks(org.lrdm.effectors.Action)"},{"p":"org.lrdm","c":"TimedRDMSim","l":"getProbes()"},{"p":"org.lrdm","c":"Network","l":"getProps()"},{"p":"org.lrdm","c":"TimedRDMSim","l":"getProps()"},{"p":"org.lrdm","c":"Mirror","l":"getReadyTime()"},{"p":"org.lrdm","c":"DataPackage","l":"getReceived()"},{"p":"org.lrdm","c":"Mirror","l":"getReceivedPerTimestep(int)"},{"p":"org.lrdm","c":"Link","l":"getReceiver()"},{"p":"org.lrdm","c":"TimedRDMSim","l":"getSimTime()"},{"p":"org.lrdm","c":"Link","l":"getSource()"},{"p":"org.lrdm","c":"Mirror","l":"getStartupTime()"},{"p":"org.lrdm","c":"Link","l":"getState()"},{"p":"org.lrdm","c":"Mirror","l":"getState()"},{"p":"org.lrdm","c":"Link","l":"getTarget()"},{"p":"org.lrdm.topologies","c":"NConnectedTopology","l":"getTargetMirror(Mirror, Network)","u":"getTargetMirror(org.lrdm.Mirror,org.lrdm.Network)"},{"p":"org.lrdm.effectors","c":"Action","l":"getTime()"},{"p":"org.lrdm","c":"Network","l":"getTopologyStrategy()"},{"p":"org.lrdm","c":"Network","l":"getTtwHistory()"},{"p":"org.lrdm","c":"GraphVisualization","l":"GraphVisualization()","u":"%3Cinit%3E()"},{"p":"org.lrdm.topologies","c":"BalancedTreeTopologyStrategy","l":"handleAddNewMirrors(Network, int, Properties, int)","u":"handleAddNewMirrors(org.lrdm.Network,int,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"FullyConnectedTopology","l":"handleAddNewMirrors(Network, int, Properties, int)","u":"handleAddNewMirrors(org.lrdm.Network,int,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"NConnectedTopology","l":"handleAddNewMirrors(Network, int, Properties, int)","u":"handleAddNewMirrors(org.lrdm.Network,int,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"TopologyStrategy","l":"handleAddNewMirrors(Network, int, Properties, int)","u":"handleAddNewMirrors(org.lrdm.Network,int,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"BalancedTreeTopologyStrategy","l":"handleRemoveMirrors(Network, int, Properties, int)","u":"handleRemoveMirrors(org.lrdm.Network,int,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"TopologyStrategy","l":"handleRemoveMirrors(Network, int, Properties, int)","u":"handleRemoveMirrors(org.lrdm.Network,int,java.util.Properties,int)"},{"p":"org.lrdm","c":"Mirror.State","l":"HASDATA"},{"p":"org.lrdm","c":"Link","l":"hashCode()"},{"p":"org.lrdm","c":"Link.State","l":"INACTIVE"},{"p":"org.lrdm","c":"DataPackage","l":"increaseReceived(int)"},{"p":"org.lrdm","c":"GraphVisualization","l":"init(Network)","u":"init(org.lrdm.Network)"},{"p":"org.lrdm","c":"VisualizationStrategy","l":"init(Network)","u":"init(org.lrdm.Network)"},{"p":"org.lrdm","c":"TimedRDMSim","l":"initialize(TopologyStrategy)","u":"initialize(org.lrdm.topologies.TopologyStrategy)"},{"p":"org.lrdm.topologies","c":"BalancedTreeTopologyStrategy","l":"initNetwork(Network, Properties)","u":"initNetwork(org.lrdm.Network,java.util.Properties)"},{"p":"org.lrdm.topologies","c":"FullyConnectedTopology","l":"initNetwork(Network, Properties)","u":"initNetwork(org.lrdm.Network,java.util.Properties)"},{"p":"org.lrdm.topologies","c":"NConnectedTopology","l":"initNetwork(Network, Properties)","u":"initNetwork(org.lrdm.Network,java.util.Properties)"},{"p":"org.lrdm.topologies","c":"TopologyStrategy","l":"initNetwork(Network, Properties)","u":"initNetwork(org.lrdm.Network,java.util.Properties)"},{"p":"org.lrdm","c":"Link","l":"isActive()"},{"p":"org.lrdm","c":"Mirror","l":"isLinkedWith(Mirror)","u":"isLinkedWith(org.lrdm.Mirror)"},{"p":"org.lrdm","c":"DataPackage","l":"isLoaded()"},{"p":"org.lrdm","c":"Mirror","l":"isRoot()"},{"p":"org.lrdm","c":"Link","l":"isSending()"},{"p":"org.lrdm","c":"Link","l":"Link(int, Mirror, Mirror, int, Properties)","u":"%3Cinit%3E(int,org.lrdm.Mirror,org.lrdm.Mirror,int,java.util.Properties)"},{"p":"org.lrdm.probes","c":"LinkProbe","l":"LinkProbe(Network)","u":"%3Cinit%3E(org.lrdm.Network)"},{"p":"org.lrdm.examples","c":"ExampleOptimizer","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.lrdm.examples","c":"ExampleSimulation","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.lrdm.examples","c":"ScenarioOne","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.lrdm","c":"Mirror","l":"Mirror(int, int, Properties)","u":"%3Cinit%3E(int,int,java.util.Properties)"},{"p":"org.lrdm.effectors","c":"MirrorChange","l":"MirrorChange(Network, int, int, int)","u":"%3Cinit%3E(org.lrdm.Network,int,int,int)"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"MirrorProbe(Network)","u":"%3Cinit%3E(org.lrdm.Network)"},{"p":"org.lrdm.topologies","c":"NConnectedTopology","l":"NConnectedTopology()","u":"%3Cinit%3E()"},{"p":"org.lrdm","c":"Network","l":"Network(TopologyStrategy, int, int, int, Properties)","u":"%3Cinit%3E(org.lrdm.topologies.TopologyStrategy,int,int,int,java.util.Properties)"},{"p":"org.lrdm","c":"TimedRDMSim","l":"plotLinks()"},{"p":"org.lrdm.probes","c":"LinkProbe","l":"print(int)"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"print(int)"},{"p":"org.lrdm.probes","c":"Probe","l":"print(int)"},{"p":"org.lrdm","c":"Mirror.State","l":"READY"},{"p":"org.lrdm","c":"Network","l":"registerProbe(Probe)","u":"registerProbe(org.lrdm.probes.Probe)"},{"p":"org.lrdm.effectors","c":"Effector","l":"removeAction(Action)","u":"removeAction(org.lrdm.effectors.Action)"},{"p":"org.lrdm","c":"Mirror","l":"removeLink(Link)","u":"removeLink(org.lrdm.Link)"},{"p":"org.lrdm","c":"DataPackage","l":"reset()"},{"p":"org.lrdm.topologies","c":"BalancedTreeTopologyStrategy","l":"restartNetwork(Network, Properties, int)","u":"restartNetwork(org.lrdm.Network,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"FullyConnectedTopology","l":"restartNetwork(Network, Properties, int)","u":"restartNetwork(org.lrdm.Network,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"NConnectedTopology","l":"restartNetwork(Network, Properties, int)","u":"restartNetwork(org.lrdm.Network,java.util.Properties,int)"},{"p":"org.lrdm.topologies","c":"TopologyStrategy","l":"restartNetwork(Network, Properties, int)","u":"restartNetwork(org.lrdm.Network,java.util.Properties,int)"},{"p":"org.lrdm","c":"TimedRDMSim","l":"run()"},{"p":"org.lrdm","c":"TimedRDMSim","l":"runStep(int)"},{"p":"org.lrdm.examples","c":"ScenarioOne","l":"ScenarioOne()","u":"%3Cinit%3E()"},{"p":"org.lrdm","c":"Mirror","l":"setDataPackage(DataPackage)","u":"setDataPackage(org.lrdm.DataPackage)"},{"p":"org.lrdm","c":"Network","l":"setEffector(Effector)","u":"setEffector(org.lrdm.effectors.Effector)"},{"p":"org.lrdm","c":"TimedRDMSim","l":"setHeadless(boolean)"},{"p":"org.lrdm.effectors","c":"Effector","l":"setMirrors(int, int)","u":"setMirrors(int,int)"},{"p":"org.lrdm","c":"Network","l":"setNumMirrors(int, int)","u":"setNumMirrors(int,int)"},{"p":"org.lrdm","c":"Network","l":"setNumTargetedLinksPerMirror(int, int)","u":"setNumTargetedLinksPerMirror(int,int)"},{"p":"org.lrdm","c":"Mirror","l":"setRoot(boolean)"},{"p":"org.lrdm.effectors","c":"Effector","l":"setStrategy(TopologyStrategy, int)","u":"setStrategy(org.lrdm.topologies.TopologyStrategy,int)"},{"p":"org.lrdm.effectors","c":"Effector","l":"setTargetLinksPerMirror(int, int)","u":"setTargetLinksPerMirror(int,int)"},{"p":"org.lrdm","c":"Network","l":"setTopologyStrategy(TopologyStrategy, int)","u":"setTopologyStrategy(org.lrdm.topologies.TopologyStrategy,int)"},{"p":"org.lrdm","c":"Link","l":"shutdown()"},{"p":"org.lrdm","c":"Mirror","l":"shutdown(int)"},{"p":"org.lrdm","c":"Mirror.State","l":"STARTING"},{"p":"org.lrdm","c":"Mirror.State","l":"STOPPED"},{"p":"org.lrdm","c":"Mirror.State","l":"STOPPING"},{"p":"org.lrdm.effectors","c":"TargetLinkChange","l":"TargetLinkChange(Network, int, int, int)","u":"%3Cinit%3E(org.lrdm.Network,int,int,int)"},{"p":"org.lrdm","c":"TimedRDMSim","l":"TimedRDMSim()","u":"%3Cinit%3E()"},{"p":"org.lrdm","c":"TimedRDMSim","l":"TimedRDMSim(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.lrdm.effectors","c":"Effector","l":"timeStep(int)"},{"p":"org.lrdm","c":"Link","l":"timeStep(int)"},{"p":"org.lrdm","c":"Mirror","l":"timeStep(int)"},{"p":"org.lrdm","c":"Network","l":"timeStep(int)"},{"p":"org.lrdm.effectors","c":"TopologyChange","l":"TopologyChange(Network, TopologyStrategy, int, int)","u":"%3Cinit%3E(org.lrdm.Network,org.lrdm.topologies.TopologyStrategy,int,int)"},{"p":"org.lrdm.topologies","c":"TopologyStrategy","l":"TopologyStrategy()","u":"%3Cinit%3E()"},{"p":"org.lrdm","c":"Link","l":"toString()"},{"p":"org.lrdm","c":"Mirror","l":"toString()"},{"p":"org.lrdm","c":"Mirror.State","l":"UP"},{"p":"org.lrdm.probes","c":"LinkProbe","l":"update(int)"},{"p":"org.lrdm.probes","c":"MirrorProbe","l":"update(int)"},{"p":"org.lrdm.probes","c":"Probe","l":"update(int)"},{"p":"org.lrdm","c":"GraphVisualization","l":"updateGraph(Network, long)","u":"updateGraph(org.lrdm.Network,long)"},{"p":"org.lrdm","c":"VisualizationStrategy","l":"updateGraph(Network, long)","u":"updateGraph(org.lrdm.Network,long)"},{"p":"org.lrdm","c":"Link.State","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.lrdm","c":"Mirror.State","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.lrdm","c":"Link.State","l":"values()"},{"p":"org.lrdm","c":"Mirror.State","l":"values()"}];updateSearchResults();